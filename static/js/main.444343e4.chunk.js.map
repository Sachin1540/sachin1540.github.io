{"version":3,"sources":["components/HomePage/CsvToJsonConvertor.js","components/HomePage/EmployeDetails.js","App.js","serviceWorker.js","index.js"],"names":["CsvToJsonConvertor","useState","file","setFile","array","setArray","data","setData","fileReader","FileReader","handleOnSubmit","e","preventDefault","onload","event","string","csvHeader","slice","indexOf","split","map","i","values","reduce","object","header","index","csvFileToArray","target","result","readAsText","headerKeys","Object","keys","assign","style","textAlign","type","id","accept","onChange","files","onClick","key","item","val","newData","Axios","create","baseURL","post","then","res","dataToAdd","push","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","api","axios","validateEmail","email","test","String","toLowerCase","EmployeDetails","iserror","setIserror","errorMessages","setErrorMessages","useEffect","get","catch","error","console","log","Alert","severity","msg","title","columns","field","hidden","icons","editable","onRowUpdate","oldData","Promise","resolve","errorList","name","address","country","length","_id","patch","dataUpdate","tableData","handleRowUpdate","onRowAdd","undefined","handleRowAdd","onRowDelete","delete","dataDelete","splice","handleRowDelete","options","exportButton","App","className","path","element","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.444343e4.chunk.js","sourcesContent":["import Axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nexport const CsvToJsonConvertor = () => {\r\n  const [file, setFile] = useState();\r\n  const [array, setArray] = useState([]);\r\n  const [data, setData] = useState([]); //table data\r\n  const fileReader = new FileReader();\r\n\r\n  const handleOnChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleData = (newData) => {\r\n    const api = Axios.create({\r\n      baseURL: `http://localhost:5000/csv`,\r\n    });\r\n    api.post(\"/\", newData).then((res) => {\r\n      let dataToAdd = [...data];\r\n      dataToAdd.push(newData);\r\n      setData(dataToAdd);\r\n    });\r\n  };\r\n\r\n  const csvFileToArray = (string) => {\r\n    const csvHeader = string.slice(0, string.indexOf(\"\\n\")).split(\",\");\r\n    const csvRows = string.slice(string.indexOf(\"\\n\") + 1).split(\"\\n\");\r\n\r\n    const array = csvRows.map((i) => {\r\n      const values = i.split(\",\");\r\n      const obj = csvHeader.reduce((object, header, index) => {\r\n        object[header] = values[index];\r\n        return object;\r\n      }, {});\r\n      return obj;\r\n    });\r\n\r\n    setArray(array);\r\n  };\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (file) {\r\n      fileReader.onload = function (event) {\r\n        const text = event.target.result;\r\n        csvFileToArray(text);\r\n      };\r\n\r\n      fileReader.readAsText(file);\r\n    }\r\n  };\r\n  const headerKeys = Object.keys(Object.assign({}, ...array));\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <h1>React Js CSV Import & Store In DB</h1>\r\n      <form>\r\n        <input\r\n          type={\"file\"}\r\n          id={\"csvFileInput\"}\r\n          accept={\".csv\"}\r\n          onChange={handleOnChange}\r\n        />\r\n        <button\r\n          onClick={(e) => {\r\n            handleOnSubmit(e);\r\n          }}\r\n        >\r\n          IMPORT CSV\r\n        </button>\r\n      </form>\r\n\r\n      <br />\r\n\r\n      <table>\r\n        <thead>\r\n          <tr key={\"header\"}>\r\n            {headerKeys.map((key) => (\r\n              <th>{key}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {array.map((item) => (\r\n            <tr key={item.id}>\r\n              {Object.values(item).map((val) => (\r\n                <td>{val}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <button onClick={handleData}>Store Data in DB</button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { forwardRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport axios from \"axios\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n};\r\nconst api = axios.create({\r\n  baseURL: `http://localhost:5000/employee`,\r\n});\r\nfunction validateEmail(email) {\r\n  const re =\r\n    /^((?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\]))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}\r\nexport const EmployeDetails = () => {\r\n  var columns = [\r\n    { title: \"id\", field: \"_id\", hidden: true },\r\n    { title: \"Name\", field: \"name\" },\r\n    { title: \"Email\", field: \"email\" },\r\n    { title: \"Date of Birth\", field: \"dob\" },\r\n    { title: \"Address\", field: \"address\" },\r\n    { title: \"Country\", field: \"country\" },\r\n  ];\r\n  const [data, setData] = useState([]); //table data\r\n  //for error handling\r\n  const [iserror, setIserror] = useState(false);\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n  useEffect(() => {\r\n    api\r\n      .get(\"/\")\r\n      .then((res) => {\r\n        setData(res.data.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error\");\r\n      });\r\n  }, []);\r\n\r\n  const handleRowUpdate = (newData, oldData, resolve) => {\r\n    //validation\r\n    let errorList = [];\r\n    if (newData.name === \"\") {\r\n      errorList.push(\"Please Enter Name\");\r\n    }\r\n    if (newData.email === \"\" || validateEmail(newData.email) === false) {\r\n      errorList.push(\"Please enter a valid email\");\r\n    }\r\n    if (newData.address === \"\") {\r\n      errorList.push(\"Please Enter Address\");\r\n    }\r\n    if (newData.country === \"\") {\r\n      errorList.push(\"Please Enter Country\");\r\n    }\r\n\r\n    if (errorList.length < 1) {\r\n      console.log(\"newData._id: \", newData._id);\r\n      api\r\n        .patch(\"/\" + newData._id, newData)\r\n        .then((res) => {\r\n          const dataUpdate = [...data];\r\n          const index = oldData.tableData._id;\r\n          dataUpdate[index] = newData;\r\n          setData([...dataUpdate]);\r\n          resolve();\r\n          setIserror(false);\r\n          setErrorMessages([]);\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessages([\"Update failed! Server error\"]);\r\n          setIserror(true);\r\n          resolve();\r\n        });\r\n    } else {\r\n      setErrorMessages(errorList);\r\n      setIserror(true);\r\n      resolve();\r\n    }\r\n  };\r\n\r\n  const handleRowAdd = (newData, resolve) => {\r\n    //validation\r\n    let errorList = [];\r\n    if (newData.name === undefined) {\r\n      errorList.push(\"Please Enter Name\");\r\n    }\r\n    if (newData.address === undefined) {\r\n      errorList.push(\"Please Enter Address\");\r\n    }\r\n    if (newData.email === undefined || validateEmail(newData.email) === false) {\r\n      errorList.push(\"Please enter a valid email\");\r\n    }\r\n    if (newData.country === undefined) {\r\n      errorList.push(\"Please Enter Country\");\r\n    }\r\n\r\n    if (errorList.length < 1) {\r\n      //no error\r\n      api\r\n        .post(\"/\", newData)\r\n        .then((res) => {\r\n          let dataToAdd = [...data];\r\n          dataToAdd.push(newData);\r\n          setData(dataToAdd);\r\n          resolve();\r\n          setErrorMessages([]);\r\n          setIserror(false);\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessages([\"Cannot add data. Server error!\"]);\r\n          setIserror(true);\r\n          resolve();\r\n        });\r\n    } else {\r\n      setErrorMessages(errorList);\r\n      setIserror(true);\r\n      resolve();\r\n    }\r\n  };\r\n\r\n  const handleRowDelete = (oldData, resolve) => {\r\n    console.log(\"oldData._id: \", oldData._id);\r\n    api\r\n      .delete(\"/\" + oldData._id)\r\n      .then((res) => {\r\n        const dataDelete = [...data];\r\n        const index = oldData.tableData._id;\r\n        dataDelete.splice(index, 1);\r\n        setData([...dataDelete]);\r\n        resolve();\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessages([\"Delete failed! Server error\"]);\r\n        setIserror(true);\r\n        resolve();\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        {iserror && (\r\n          <Alert severity=\"error\">\r\n            {errorMessages.map((msg, i) => {\r\n              return <div key={i}>{msg}</div>;\r\n            })}\r\n          </Alert>\r\n        )}\r\n      </div>\r\n      <MaterialTable\r\n        title=\"React Material Table\"\r\n        columns={columns}\r\n        data={data}\r\n        icons={tableIcons}\r\n        editable={{\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve) => {\r\n              handleRowUpdate(newData, oldData, resolve);\r\n            }),\r\n          onRowAdd: (newData) =>\r\n            new Promise((resolve) => {\r\n              handleRowAdd(newData, resolve);\r\n            }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise((resolve) => {\r\n              handleRowDelete(oldData, resolve);\r\n            }),\r\n        }}\r\n        options={{\r\n          exportButton: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\n\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { CsvToJsonConvertor } from \"./components/HomePage/CsvToJsonConvertor\";\nimport { EmployeDetails } from \"./components/HomePage/EmployeDetails\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<EmployeDetails />} />\n          <Route path=\"/csv\" element={<CsvToJsonConvertor />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}